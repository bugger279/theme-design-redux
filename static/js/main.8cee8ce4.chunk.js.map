{"version":3,"sources":["reportWebVitals.js","assets/images/logo.png","components/sidebar/Sidebar.jsx","components/dropdown/Dropdown.jsx","assets/images/tuat.png","redux/actions/ThemeAction.js","components/thememenu/ThemeMenu.jsx","components/topnav/TopNav.jsx","components/status-card/StatusCard.jsx","components/table/Table.jsx","components/badge/Badge.jsx","pages/Dashboard.jsx","pages/Customers.jsx","components/Routes.jsx","components/layout/Layout.jsx","redux/reducers/ThemeReducer.js","redux/reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SidebarItems","props","active","className","icon","title","Sidebar","console","log","location","pathname","activeIndex","sidebar_items","findIndex","item","route","src","logo","alt","map","index","to","display_name","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","document","addEventListener","e","current","contains","target","classList","toggle","remove","ref","badge","customToggle","contentData","renderItems","renderFooter","exportDefault","setMode","mode","type","payload","setColor","color","getTheme","mode_settings","id","name","background","class","color_settings","ThemeMenu","menu_ref","menu_toggle_ref","useState","currMode","setcurrMode","currColor","setcurrColor","dispatch","useDispatch","useEffect","themeClass","find","localStorage","getItem","colorClass","undefined","onClick","add","setItem","ThemeAction","current_user","image","user_image","TopNav","placeholder","user","user_menu","content","renderUserMenu","notifications","renderNotificationItem","StatusCard","count","Table","initDataShow","limit","bodyData","slice","Number","dataShow","Math","floor","length","headData","renderHead","renderBody","Badge","chartOptions","series","data","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","legend","position","grid","show","topCustomers","head","body","latestOrders","header","date","price","status","orderStatus","Dashboard","themeReducer","useSelector","state","ThemeReducer","status_card","theme","height","renderCustomerHead","username","order","renderCustomerBody","renderOrderHead","renderOrderBody","customerTableHead","Customers","customerList","email","phone","total_orders","total_spend","Routes","path","exact","component","Layout","render","action","rootReducer","combineReducers","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8cee8ce4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.ef7bfcda.png\";","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/images/logo.png';\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json';\nimport './sidebar.css';\n\nconst SidebarItems = (props) => {\n    const active = props.active ? 'active': '';\n\n    return (\n        <div className=\"sidebar__item\">\n            <div className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span>\n                    {props.title}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = (props) => {\n    console.log(props.location.pathname, '<=== pathname')\n    const activeIndex = sidebar_items.findIndex(item => item.route === props.location.pathname);\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__logo\">\n                <img src={logo} alt=\"Inder CRM\" />\n            </div>\n            {\n                sidebar_items.map((item, index) => (\n                    <Link to={item.route} key={index}>\n                        <SidebarItems title={item.display_name} icon={item.icon} active={index === activeIndex} />\n                    </Link>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, { useRef } from 'react'\nimport './dropdown.css';\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        console.log(toggle_ref)\n        // user click on toggle\n        if(toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active');\n        } else {\n        // user clicks outside the toggle and content\n            if(content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active');\n            }\n        }\n    })\n}\n\nconst Dropdown = (props) => {\n\n    const dropdown_toggle_el = useRef(null);\n    const dropdown_content_el = useRef(null);\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\n\n    return (\n        <div className=\"dropdown\">\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\n                {\n                    props.icon ? <i className={props.icon}></i> : ''\n                }\n                {\n                    props.badge ? <span className=\"dropdown__toggle-badge\">{props.badge}</span> : ''\n                }\n                {\n                    props.customToggle ? props.customToggle() : ''\n                }\n            </button>\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\n                {console.log(props.contentData, 'props.renderItems')}\n                {\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\n                }\n                {\n                    props.renderFooter ? (\n                        <div className=\"dropdown__footer\">\n                            {props.renderFooter()}\n                        </div>\n                    ) : ''\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Dropdown\n","export default __webpack_public_path__ + \"static/media/tuat.7ec76cec.png\";","const setMode = mode => {\n    return {\n        type: 'SET_MODE',\n        payload: mode\n    }\n}\n\nconst setColor = color => {\n    return {\n        type: 'SET_COLOR',\n        payload: color\n    }\n}\n\nconst getTheme = () => {\n    return {\n        type: 'GET_THEME',\n    }\n}\n\nconst exportDefault = {\n    setMode,\n    setColor,\n    getTheme\n}\n\nexport default exportDefault;","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport ThemeAction from '../../redux/actions/ThemeAction';\nimport './thememenu.css';\n\nconst mode_settings = [\n    {\n        id: 'light',\n        name: 'Light',\n        background: 'light-background',\n        class: 'theme-mode-light'\n    },\n    {\n        id: 'dark',\n        name: 'Dark',\n        background: 'dark-background',\n        class: 'theme-mode-dark'\n    }\n];\n\nconst color_settings = [\n    {\n        id: 'blue',\n        name: 'Blue',\n        background: 'blue-color',\n        class: 'theme-color-blue'\n    },\n    {\n        id: 'red',\n        name: 'Red',\n        background: 'red-color',\n        class: 'theme-color-red'\n    },\n    {\n        id: 'cyan',\n        name: 'Cyan',\n        background: 'cyan-color',\n        class: 'theme-color-cyan'\n    },\n    {\n        id: 'green',\n        name: 'Green',\n        background: 'green-color',\n        class: 'theme-color-green'\n    },\n    {\n        id: 'orange',\n        name: 'Orange',\n        background: 'orange-color',\n        class: 'theme-color-orange'\n    },\n];\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        console.log(toggle_ref)\n        // user click on toggle\n        if(toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active');\n        } else {\n        // user clicks outside the toggle and content\n            if(content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active');\n            }\n        }\n    })\n}\n\nconst ThemeMenu = () => {\n    const menu_ref = useRef(null);\n    const menu_toggle_ref = useRef(null);\n    clickOutsideRef(menu_ref, menu_toggle_ref);\n\n    const setActiveMenu = () => menu_ref.current.classList.add('active');\n    const closeMenu = () => menu_ref.current.classList.remove('active');\n\n    const [currMode, setcurrMode] = useState('light');\n    const [currColor, setcurrColor] = useState('blue');\n\n    const dispatch = useDispatch();\n\n    const setMode = mode => {\n        setcurrMode(mode.id);\n        localStorage.setItem('themeMode', mode.class);\n        dispatch(ThemeAction.setMode(mode.class));\n    }\n\n    const setColor = color => {\n        setcurrColor(color.id);\n        localStorage.setItem('colorMode', color.class);\n        dispatch(ThemeAction.setColor(color.class));\n    }\n\n    useEffect(() => {\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'))\n\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'))\n\n        if (themeClass !== undefined) setcurrMode(themeClass.id)\n\n        if (colorClass !== undefined) setcurrColor(colorClass.id)\n\n    }, []);\n\n    return (\n        <div>\n            <button ref={menu_toggle_ref} onClick={() => setActiveMenu()} className=\"dropdown__toggle\">\n                <i className=\"bx bx-palette\"></i>\n            </button>\n            <div ref={menu_ref} className=\"theme-menu\">\n                <h4>Theme Setting</h4>\n                <button onClick={() => closeMenu()} className=\"theme-menu__close\">\n                    <i className=\"bx bx-x\"></i>\n                </button>\n                <div className=\"theme-menu__select\">\n                    <ul className=\"mode-list\">\n                        {\n                            mode_settings.map((item, index) => (\n                                <li key={index} onClick={() => setMode(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active': ''}`}>\n                                        <i className=\"bx bx-check\"></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n                <div className=\"theme-menu__select\">\n                    <span>Choose color</span>\n                    <ul className=\"mode-list\">\n                        {\n                            color_settings.map((item, index) => (\n                                <li key={index} onClick={() => setColor(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active': ''}`}>\n                                        <i className=\"bx bx-check\"></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ThemeMenu\n","import React from 'react'\nimport './topnav.css';\nimport Dropdown from '../dropdown/Dropdown';\nimport notifications from '../../assets/JsonData/notification.json';\nimport user_image from '../../assets/images/tuat.png';\nimport user_menu from '../../assets/JsonData/user_menus.json';\nimport { Link } from 'react-router-dom';\nimport ThemeMenu from '../thememenu/ThemeMenu';\n\nconst current_user = {\n    display_name: 'Inder Sav',\n    image: user_image\n}\n\nconst renderNotificationItem = (item, index) => (\n    <div className=\"notification-item\" key={index}>\n        <i className={item.icon}></i>\n        <span>{item.content}</span>\n    </div>\n);\n\nconst renderUseToggle = (user) => (\n    <div className=\"topnav__right-user\">\n        <div className=\"topnav__right-user__image\">\n            <img src={user.image} alt=\"\"/>\n        </div>\n        <div className=\"topnav__right-user__name\">\n            {user.display_name}\n        </div>\n    </div>\n)\n\nconst renderUserMenu = (item, index) => (\n    <Link to=\"/\" key={index}>\n        <div className=\"notification-item\">\n            <i className={item.icon}></i>\n            <span>{item.content}</span>\n        </div>\n    </Link>\n)\n\nconst TopNav = () => {\n    return (\n        <div className=\"topnav\">\n            <div className=\"topnav__search\">\n                <input type=\"text\" placeholder=\"Search here...\"/>\n                <i className=\"bx bx-search\"></i>\n            </div>\n            <div className=\"topnav__right\">\n                <div className=\"topnav__right-item\">\n                <Dropdown\n                    customToggle={() => renderUseToggle(current_user)}\n                    contentData={user_menu}\n                    renderItems={(item, index) => renderUserMenu(item, index)}\n                />\n                </div>\n                <div className=\"topnav__right-item\">\n                    <Dropdown\n                        icon=\"bx bx-bell\"\n                        badge=\"12\"\n                        contentData={notifications}\n                        renderItems={(item, index) => renderNotificationItem(item, index)}\n                        renderFooter={() => <Link to='/'>View All</Link>}\n                    />\n                </div>\n                <div className=\"topnav__right-item\">\n                    <ThemeMenu />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TopNav\n","import React from 'react'\nimport './statusCard.css';\n\nconst StatusCard = (props) => {\n    return (\n        <div className=\"status-card\">\n            <div className=\"status-card__icon\">\n                <i className={props.icon}></i>\n            </div>\n            <div className=\"status-card__info\">\n                <h4>{props.count}</h4>\n                <span>{props.title}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default StatusCard\n","import React, { useState } from 'react'\nimport './table.css';\n\nconst Table = (props) => {\n    \n    const initDataShow = props.limit ? props.bodyData.slice(0, Number(props.limit)) : props.bodyData;\n\n    const [dataShow, setDataShow] = useState(initDataShow);\n\n    let pages = 1;\n    let range = [];\n\n    if (props.limit !== undefined) {\n        let page = Math.floor(props.bodyData.length / Number(props.limit));\n    }\n\n    return (\n        <div>\n            <div className=\"table-wrapper\">\n                <table>\n                    {\n                        props.headData && props.renderHead ? (\n                            <thead>\n                                <tr>\n                                    {\n                                        props.headData.map((item, index) => props.renderHead(item, index))\n                                    }\n                                </tr>\n                            </thead>\n                        ) : null\n                    }\n                    {\n                        props.bodyData && props.renderBody ? (\n                            <tbody>\n                                {\n                                    dataShow.map((item, index) => props.renderBody(item, index))\n                                }\n                            </tbody>\n                        ) : null\n                    }\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Table\n","import React from 'react'\nimport './badge.css';\n\nconst Badge = (props) => {\n    return (\n        <span className={`badge badge-${props.type}`}>\n            {props.content}\n        </span>\n    )\n}\n\nexport default Badge\n","import React from 'react'\nimport status_card from '../assets/JsonData/status-card-data.json';\nimport StatusCard from '../components/status-card/StatusCard';\nimport Chart from 'react-apexcharts'\nimport { Link } from 'react-router-dom';\nimport Table from '../components/table/Table';\nimport Badge from '../components/badge/Badge';\nimport { useSelector } from 'react-redux';\n\nconst chartOptions = {\n    series: [{\n        name: 'Online Customers',\n        data: [40, 70, 20, 90, 36, 80, 30, 91, 60, 113]\n    }, {\n        name: 'Store Customers',\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\n    }],\n    options: {\n        color: ['#6ab04c', '#2980b9'],\n        chart: {\n            background: 'transparent'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        },\n        legend: {\n            position: 'top'\n        },\n        grid: {\n            show: false\n        }\n    }\n}\n\nconst topCustomers = {\n    head: [\n        'user',\n        'total orders',\n        'total spending'\n    ],\n    body: [\n        {\n            \"username\": \"john doe\",\n            \"order\": \"490\",\n            \"price\": \"$15,870\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"250\",\n            \"price\": \"$12,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"120\",\n            \"price\": \"$10,840\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"110\",\n            \"price\": \"$9,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"80\",\n            \"price\": \"$8,840\"\n        }\n    ]\n}\n\nconst latestOrders = {\n    header: [\n        \"order id\",\n        \"user\",\n        \"total price\",\n        \"date\",\n        \"status\"\n    ],\n    body: [\n        {\n            id: \"#OD1711\",\n            user: \"john doe\",\n            date: \"17 Jun 2021\",\n            price: \"$900\",\n            status: \"shipping\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"pending\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"refund\"\n        }\n    ]\n}\n\nconst orderStatus = {\n    \"shipping\": \"primary\",\n    \"pending\": \"warning\",\n    \"paid\": \"success\",\n    \"refund\": \"danger\"\n}\n\nconst renderCustomerHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderCustomerBody = (item, index) => (\n    <tr key={index}>\n        <th>{item.username}</th>\n        <th>{item.order}</th>\n        <th>{item.price}</th>\n    </tr>\n)\n\nconst renderOrderHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderOrderBody = (item, index) => (\n    <tr key={index}>\n        <th>{item.id}</th>\n        <th>{item.user}</th>\n        <th>{item.price}</th>\n        <th>{item.date}</th>\n        <th>\n            <Badge type={orderStatus[item.status]} content={item.status} />\n        </th>\n    </tr>\n)\n\nconst Dashboard = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer.mode);\n\n    return (\n        <div>\n            <h2 className=\"page-header\">Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"row\">\n                        {\n                            status_card.map((item, index) => (\n                                <div className=\"col-6\" key={index}>\n                                    <StatusCard\n                                        icon={item.icon}\n                                        count={item.count}\n                                        title={item.title}\n                                    />\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"card full-height\">\n                        <Chart\n                            options={\n                                themeReducer === 'theme-mode-dark' ? {\n                                    ...chartOptions.options,\n                                    theme: {\n                                        mode: 'dark'\n                                    }\n                                } : {\n                                        ...chartOptions.options,\n                                        theme: {\n                                            mode: 'light'\n                                        }\n                                    }\n                            }\n                            series={chartOptions.series}\n                            type='line'\n                            height='100%'\n                        />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>Top Customers</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={topCustomers.head}\n                                renderHead={(item, index) => renderCustomerHead(item, index)}\n                                bodyData={topCustomers.body}\n                                renderBody={(item, index) => renderCustomerBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to=\"/\">View All</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>Latest Orders</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={latestOrders.header}\n                                renderHead={(item, index) => renderOrderHead(item, index)}\n                                bodyData={latestOrders.body}\n                                renderBody={(item, index) => renderOrderBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to=\"/\">View All</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React from 'react';\nimport Table from '../components/table/Table';\nimport customerList from '../assets/JsonData/customers-list.json';\n\nconst customerTableHead = [\n    '',\n    'name',\n    'email',\n    'phone',\n    'total orders',\n    'total spend',\n    'location'\n];\n\nconst renderHead = (item, index) => <th key={index}>{item}</th>\n\nconst renderBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.id}</td>\n        <td>{item.name}</td>\n        <td>{item.email}</td>\n        <td>{item.phone}</td>\n        <td>{item.total_orders}</td>\n        <td>{item.total_spend}</td>\n        <td>{item.location}</td>\n    </tr>\n)\n\nconst Customers = () => {\n    return (\n        <div>\n            <h2 className=\"page-header\">Customers</h2>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card__body\">\n                        <Table\n                                limit='10'\n                                headData={customerTableHead}\n                                renderHead={(item, index) => renderHead(item, index)}\n                                bodyData={customerList}\n                                renderBody={(item, index) => renderBody(item, index)}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Customers\n","import React from 'react'\nimport {Route, Router, Switch} from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport Customers from '../pages/Customers'\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/customers\" component={Customers} />\n        </Switch>\n    )\n}\n\nexport default Routes\n","import React, { useEffect } from 'react'\nimport Sidebar from '../sidebar/Sidebar';\nimport TopNav from '../topnav/TopNav';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Routes from '../Routes';\nimport './layout.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ThemeAction from '../../redux/actions/ThemeAction';\n\nconst Layout = () => {\n    const themeReducer = useSelector(state => state.ThemeReducer);\n    const dispatch =  useDispatch()\n\n    useEffect(() => {\n        console.log('ThemeReducer', themeReducer);\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light');\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light');\n        dispatch(ThemeAction.setMode(themeClass));\n        dispatch(ThemeAction.setColor(colorClass));\n    }, [dispatch])\n    return (\n        <Router>\n            <Route render={(props) => (\n                <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                    <Sidebar {...props} />\n                    <div className=\"layout__content\">\n                        <TopNav />\n                        <div className=\"layout__content-main\">\n                            <Routes />\n                        </div>\n                    </div>\n                </div>\n            )}></Route>\n        </Router>\n    )\n}\n\nexport default Layout\n","const ThemeReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"SET_MODE\":\n      return {\n        ...state,\n        mode: action.payload,\n      };\n\n    case \"SET_COLOR\":\n      return {\n        ...state,\n        color: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default ThemeReducer;\n","import ThemeReducer from \"./ThemeReducer\";\n\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({ ThemeReducer });\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./assets/boxicons-2.0.7/css/boxicons.min.css\";\nimport \"./assets/css/grid.css\";\nimport \"./assets/css/theme.css\";\nimport \"./assets/css/index.css\";\nimport Layout from \"./components/layout/Layout\";\n\n\n// Redux Setup\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./redux/reducers\";\n\nconst store = createStore(\n  rootReducer,\n);\n// End of setup\n\n//imported Provider and added the created store\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Layout />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}